{
  "Env": {
    "Driver": "postgres",
    "URL": {
      "Scheme": "postgres",
      "Opaque": "",
      "User": {},
      "Host": "localhost:5432",
      "Path": "/ronen",
      "RawPath": "",
      "OmitHost": false,
      "ForceQuery": false,
      "RawQuery": "sslmode=disable",
      "Fragment": "",
      "RawFragment": "",
      "Schema": ""
    },
    "Dir": "../../ent/mig"
  },
  "Steps": [
    {
      "Name": "Migration Integrity Check",
      "Text": "File atlas.sum is valid"
    },
    {
      "Name": "Detect New Migration Files",
      "Text": "Found 1 new migration files (from 1 total)"
    },
    {
      "Name": "Replay Migration Files",
      "Text": "Loaded 1 changes on dev database"
    },
    {
      "Name": "Analyze 20221109094945.sql",
      "Text": "0 reports were found in analysis",
      "Result": {
        "Name": "20221109094945.sql",
        "Text": "CREATE TABLE users (\n                          user_id serial PRIMARY KEY,\n                          is_male boolean,\n                          username VARCHAR ( 50 ) UNIQUE NOT NULL,\n                          password VARCHAR ( 50 ) NOT NULL,\n                          email VARCHAR ( 255 ) UNIQUE NOT NULL,\n                          created_on TIMESTAMP NOT NULL,\n                          last_login TIMESTAMP,\n                          educated boolean,\n                          age bigint,\n                          married boolean\n);\n\nCREATE TABLE accounts (\n                          account_id bigint PRIMARY KEY,\n                          credit smallint,\n                          balance integer,\n                          is_premium boolean\n);\n\n"
      }
    }
  ],
  "Schema": {
    "Current": "schema \"public\" {\n}\n",
    "Desired": "table \"accounts\" {\n  schema = schema.public\n  column \"account_id\" {\n    null = false\n    type = bigint\n  }\n  column \"credit\" {\n    null = true\n    type = smallint\n  }\n  column \"balance\" {\n    null = true\n    type = integer\n  }\n  column \"is_premium\" {\n    null = true\n    type = boolean\n  }\n  primary_key {\n    columns = [column.account_id]\n  }\n}\ntable \"users\" {\n  schema = schema.public\n  column \"user_id\" {\n    null = false\n    type = serial\n  }\n  column \"is_male\" {\n    null = true\n    type = boolean\n  }\n  column \"username\" {\n    null = false\n    type = character_varying(50)\n  }\n  column \"password\" {\n    null = false\n    type = character_varying(50)\n  }\n  column \"email\" {\n    null = false\n    type = character_varying(255)\n  }\n  column \"created_on\" {\n    null = false\n    type = timestamp\n  }\n  column \"last_login\" {\n    null = true\n    type = timestamp\n  }\n  column \"educated\" {\n    null = true\n    type = boolean\n  }\n  column \"age\" {\n    null = true\n    type = bigint\n  }\n  column \"married\" {\n    null = true\n    type = boolean\n  }\n  primary_key {\n    columns = [column.user_id]\n  }\n  index \"users_email_key\" {\n    unique  = true\n    columns = [column.email]\n    type    = BTREE\n  }\n  index \"users_username_key\" {\n    unique  = true\n    columns = [column.username]\n    type    = BTREE\n  }\n}\nschema \"public\" {\n}\n"
  },
  "Files": [
    {
      "Name": "20221109094945.sql",
      "Text": "CREATE TABLE users (\n                          user_id serial PRIMARY KEY,\n                          is_male boolean,\n                          username VARCHAR ( 50 ) UNIQUE NOT NULL,\n                          password VARCHAR ( 50 ) NOT NULL,\n                          email VARCHAR ( 255 ) UNIQUE NOT NULL,\n                          created_on TIMESTAMP NOT NULL,\n                          last_login TIMESTAMP,\n                          educated boolean,\n                          age bigint,\n                          married boolean\n);\n\nCREATE TABLE accounts (\n                          account_id bigint PRIMARY KEY,\n                          credit smallint,\n                          balance integer,\n                          is_premium boolean\n);\n\n"
    }
  ]
}