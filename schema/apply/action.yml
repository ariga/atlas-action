name: 'Schema Apply'
description: 'Applies schema changes to a target database'
branding:
  icon: database
author: 'Ariga'
inputs:
  working-directory:
    description: Atlas working directory, default is project root
    required: false
  config:
    description: |
      The URL of the Atlas configuration file. By default, Atlas will look for a file
      named `atlas.hcl` in the current directory. For example, `file://config/atlas.hcl`.
      Learn more about [Atlas configuration files](https://atlasgo.io/atlas-schema/projects).
    required: false
  env:
    description: The environment to use from the Atlas configuration file.  For example, `dev`.
    required: false
  vars:
    description: |
      A JSON object containing variables to be used in the Atlas configuration file.
      For example, `{"var1": "value1", "var2": "value2"}`.
    required: false
  dev-url:
    description: |
      The URL of the dev-database to use for analysis. For example: `mysql://root:pass@localhost:3306/dev`.
      Read more about [dev-databases](https://atlasgo.io/concepts/dev-database).
    required: false
  to:
    description: |
      URL(s) of the desired schema state.
    required: false
  url:
    description: |
      The URL of the target database to apply changes to. For example: `mysql://root:pass@localhost:3306/prod`.
    required: false
  schema:
    description: |
      list of glob patterns used to select which resources to keep in inspection
      see: https://atlasgo.io/declarative/inspect#inspect-multiple-schemas'
    required: false
  include:
    description: |
      list of glob patterns used to select which resources to keep in inspection
      see: https://atlasgo.io/declarative/inspect#include-schemas-
    required: false
  exclude:
    description: | 
     list of glob patterns used to filter resources from applying 
     see: https://atlasgo.io/declarative/inspect#exclude-schemas
    required: false
  plan:
    description: The plan to apply. For example, `atlas://<schema>/plans/<id>`.
    required: false
  dry-run:
    description: Print SQL without executing it. Either "true" or "false".
    required: false
    default: "false"
  auto-approve:
    description: Automatically approve and apply changes. Either "true" or "false".
    required: false
    default: "false"
  tx-mode:
    description: |
      Transaction mode to use. Either "file", "all", or "none". Default is "file".
    required: false
  lint-review:
    description: |
      Automatically generate an approval plan before applying changes. Options are "ALWAYS", "ERROR" or "WARNING".
      Use "ALWAYS" to generate a plan for every apply, or "WARNING" and "ERROR" to generate a plan only based on review policy.
    required: false
  wait-timeout:
    description: Time after which no other retry attempt is made and the action exits.
    required: false
  wait-interval:
    description: Time in seconds between different apply attempts.
    default: 1s
outputs:
  error:
    description: The error message if the action fails.
runs:
  using: node20
  main: index.js
